// Copyright (c) 2025 Rumen G. Bogdanovski
// All rights reserved.
//
// You can use this software under the terms of 'INDIGO Astronomy
// open-source license' (see LICENSE.md).
//
// THIS SOFTWARE IS PROVIDED BY THE AUTHORS 'AS IS' AND ANY EXPRESS
// OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
// GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
// WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// GPS Simulator driver definition

// version history
// 2.0 by Rumen G. Bogdanovski <rumenastro@gmail.com>
// 3.0 refactoring by Peter Polakovic <peter.polakovic@cloudmakers.eu>

driver simulator {
	label = "GPS Simulator";
	author = "Rumen G. Bogdanovski <rumenastro@gmail.com>";
	copyright = "Copyright (c) 2025 Rumen G. Bogdanovski";
	version = 9;
	// include { }
	define {
		#define SIM_LONGITUDE        22.675
		#define SIM_LATITUDE         43.625
		#define SIM_ELEVATION        650
		#define SIM_SV_IN_USE        3
		#define SIM_SV_IN_VIEW       7
		#define SIM_PDOP             2
		#define SIM_HDOP             3
		#define SIM_VDOP             3
		#define REFRESH_SECONDS      1.0
		#define TICKS_TO_2D_FIX      10
		#define TICKS_TO_3D_FIX      20
	}
	data {
		int timer_ticks;
	}
	// code { }
	// on_init { }
	// on_shutdown { }
	gps {
		name = "GPS Simulator";
		additional_instances = true;
		// code { }
		on_timer {
			if (PRIVATE_DATA->timer_ticks >= TICKS_TO_2D_FIX) {
				GPS_GEOGRAPHIC_COORDINATES_LONGITUDE_ITEM->number.value = SIM_LONGITUDE + rand() / ((double)(RAND_MAX) * 1000);
				GPS_GEOGRAPHIC_COORDINATES_LATITUDE_ITEM->number.value = SIM_LATITUDE + rand() / ((double)(RAND_MAX) * 1000);
				GPS_GEOGRAPHIC_COORDINATES_ELEVATION_ITEM->number.value = (int)(SIM_ELEVATION + 0.5 + (double)(rand()) / RAND_MAX);
				GPS_GEOGRAPHIC_COORDINATES_ACCURACY_ITEM->number.value = (int)(5 + 0.5 + (double)(rand()) / RAND_MAX);
				time_t ttime = time(NULL);
				indigo_timetoisogm(ttime, GPS_UTC_ITEM->text.value, INDIGO_VALUE_SIZE);
				GPS_ADVANCED_STATUS_SVS_IN_USE_ITEM->number.value = (int)(SIM_SV_IN_USE + 0.5 + (double)(rand()) / RAND_MAX);
				GPS_ADVANCED_STATUS_SVS_IN_VIEW_ITEM->number.value = (int)(SIM_SV_IN_VIEW + 0.5 + (double)(rand()) / RAND_MAX);
				GPS_ADVANCED_STATUS_PDOP_ITEM->number.value = (SIM_PDOP + (double)(rand()) / RAND_MAX);
				GPS_ADVANCED_STATUS_HDOP_ITEM->number.value = (SIM_HDOP + (double)(rand()) / RAND_MAX);
				GPS_ADVANCED_STATUS_VDOP_ITEM->number.value = (SIM_VDOP + (double)(rand()) / RAND_MAX);
				if (PRIVATE_DATA->timer_ticks == TICKS_TO_2D_FIX) {
					GPS_STATUS_NO_FIX_ITEM->light.value = INDIGO_IDLE_STATE;
					GPS_STATUS_2D_FIX_ITEM->light.value = INDIGO_BUSY_STATE;
					GPS_STATUS_3D_FIX_ITEM->light.value = INDIGO_IDLE_STATE;
					GPS_STATUS_PROPERTY->state = INDIGO_OK_STATE;
					indigo_update_property(device, GPS_STATUS_PROPERTY, NULL);
				}
				if (PRIVATE_DATA->timer_ticks == TICKS_TO_3D_FIX) {
					GPS_STATUS_NO_FIX_ITEM->light.value = INDIGO_IDLE_STATE;
					GPS_STATUS_2D_FIX_ITEM->light.value = INDIGO_IDLE_STATE;
					GPS_STATUS_3D_FIX_ITEM->light.value = INDIGO_OK_STATE;
					GPS_STATUS_PROPERTY->state = INDIGO_OK_STATE;
					indigo_update_property(device, GPS_STATUS_PROPERTY, NULL);
					GPS_GEOGRAPHIC_COORDINATES_PROPERTY->state = INDIGO_OK_STATE;
					GPS_UTC_TIME_PROPERTY->state = INDIGO_OK_STATE;
				}
				indigo_update_property(device, GPS_GEOGRAPHIC_COORDINATES_PROPERTY, NULL);
				indigo_update_property(device, GPS_UTC_TIME_PROPERTY, NULL);
				if (GPS_ADVANCED_ENABLED_ITEM->sw.value) {
					indigo_update_property(device, GPS_ADVANCED_STATUS_PROPERTY, NULL);
				}
			} else {
				GPS_GEOGRAPHIC_COORDINATES_LONGITUDE_ITEM->number.value = 0;
				GPS_GEOGRAPHIC_COORDINATES_LATITUDE_ITEM->number.value = 0;
				GPS_GEOGRAPHIC_COORDINATES_ELEVATION_ITEM->number.value = 0;
				GPS_GEOGRAPHIC_COORDINATES_ACCURACY_ITEM->number.value = 0;
				GPS_GEOGRAPHIC_COORDINATES_PROPERTY->state = INDIGO_BUSY_STATE;
				indigo_update_property(device, GPS_GEOGRAPHIC_COORDINATES_PROPERTY, NULL);
				time_t ttime = 0;
				GPS_UTC_TIME_PROPERTY->state = INDIGO_BUSY_STATE;
				indigo_timetoisogm(ttime, GPS_UTC_ITEM->text.value, INDIGO_VALUE_SIZE);
				GPS_ADVANCED_STATUS_SVS_IN_USE_ITEM->number.value = (int)(0.5 + (double)(rand())/RAND_MAX);
				GPS_ADVANCED_STATUS_SVS_IN_VIEW_ITEM->number.value = (int)(0.5 + (double)(rand())/RAND_MAX);
				GPS_ADVANCED_STATUS_PDOP_ITEM->number.value = 0;
				GPS_ADVANCED_STATUS_HDOP_ITEM->number.value = 0;
				GPS_ADVANCED_STATUS_VDOP_ITEM->number.value = 0;
				indigo_update_property(device, GPS_UTC_TIME_PROPERTY, NULL);
				if (GPS_ADVANCED_ENABLED_ITEM->sw.value) {
					indigo_update_property(device, GPS_ADVANCED_STATUS_PROPERTY, NULL);
				}
				if (PRIVATE_DATA->timer_ticks == 0) {
					GPS_STATUS_NO_FIX_ITEM->light.value = INDIGO_ALERT_STATE;
					GPS_STATUS_2D_FIX_ITEM->light.value = INDIGO_IDLE_STATE;
					GPS_STATUS_3D_FIX_ITEM->light.value = INDIGO_IDLE_STATE;
					GPS_STATUS_PROPERTY->state = INDIGO_OK_STATE;
					indigo_update_property(device, GPS_STATUS_PROPERTY, NULL);
				}
			}
			PRIVATE_DATA->timer_ticks++;
			indigo_reschedule_timer(device, REFRESH_SECONDS, &PRIVATE_DATA->gps_timer);
		}
		on_connect {
			srand((unsigned)time(NULL));
			PRIVATE_DATA->timer_ticks = 0;
			GPS_STATUS_NO_FIX_ITEM->light.value = INDIGO_IDLE_STATE;
			GPS_STATUS_2D_FIX_ITEM->light.value = INDIGO_IDLE_STATE;
			GPS_STATUS_3D_FIX_ITEM->light.value = INDIGO_IDLE_STATE;
			GPS_STATUS_PROPERTY->state = INDIGO_BUSY_STATE;
		}
		// on_disconnect { }
		on_attach {
			DEVICE_PORT_PROPERTY->hidden = true;
			DEVICE_PORTS_PROPERTY->hidden = true;
			GPS_ADVANCED_PROPERTY->hidden = false;
			GPS_GEOGRAPHIC_COORDINATES_PROPERTY->hidden = false;
			GPS_GEOGRAPHIC_COORDINATES_PROPERTY->count = 4;
			GPS_UTC_TIME_PROPERTY->hidden = false;
			GPS_UTC_TIME_PROPERTY->count = 1;
		}
		// on_detach { }
	}
}
